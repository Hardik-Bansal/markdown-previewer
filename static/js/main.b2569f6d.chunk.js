(this["webpackJsonpmarkdown-previewer"]=this["webpackJsonpmarkdown-previewer"]||[]).push([[0],{15:function(e,n,t){},16:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t(1),i=t.n(o),r=t(4),d=t.n(r),s=(t(15),t(5)),c=t(6),h=t(2),l=t(9),u=t(8),b=function(e){return Object(a.jsxs)("div",{id:"editor-block",children:[Object(a.jsx)("h2",{children:"Editor"}),Object(a.jsx)("textarea",{name:"editor",id:"editor",value:e.editorText,onChange:e.handleChange})]})},j=t(7),m=t.n(j),w=function(e){var n=m()(e.editorText);return Object(a.jsxs)("div",{id:"preview-block",children:[Object(a.jsx)("div",{id:"drag",onMouseDown:e.handleMouseDown}),Object(a.jsx)("h2",{children:"Preview"}),Object(a.jsx)("div",{id:"preview",dangerouslySetInnerHTML:{__html:n}})]})},x=function(e){Object(l.a)(t,e);var n=Object(u.a)(t);function t(e){var a;return Object(s.a)(this,t),(a=n.call(this,e)).state={editorText:"\n# Welcome to my Markdown Previewer\n# With a Hash symbol, you can create an h1 element\n## with a double hash symbol, you can create an h2 element\n### With the triple hash symbol, you can create an h3 element\nYou can write one line code in with single backtick ex. `<div></div>`\n```\n// this is multi-line code\n\nfunction example(a, b){\n\treturn a + b;\n}\n```\n\nYou can make text **BOLD**!\n\nOr _Italic_\n\nor both **_woohoo_**!\n\nsome ~~Crossing stuff too~~\n\nyou can add [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nIf you want to create tables, go ahead:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here...\nAnd here. | Okay. | I think we get it\n\nAnd what about lists...\n- list one.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That looks like this.\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://google.com)"},a.handleChange=a.handleChange.bind(Object(h.a)(a)),a}return Object(c.a)(t,[{key:"handleChange",value:function(e){this.setState({editorText:e.target.value})}},{key:"render",value:function(){return Object(a.jsxs)("div",{id:"container",children:[Object(a.jsx)(b,{editorText:this.state.editorText,handleChange:this.handleChange}),Object(a.jsx)(w,{editorText:this.state.editorText})]})}}]),t}(i.a.Component);d.a.render(Object(a.jsx)(x,{}),document.getElementById("root"))}},[[16,1,2]]]);
//# sourceMappingURL=main.b2569f6d.chunk.js.map